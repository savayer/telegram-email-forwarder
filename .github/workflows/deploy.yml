name: Deploy to VPS

on:
  push:
    branches: [main] # или master, в зависимости от названия вашей основной ветки

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Create .env file
        run: |
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" > .env
          echo "ENCRYPTION_KEY=${{ secrets.ENCRYPTION_KEY }}" >> .env
          echo "ENCRYPTION_IV=${{ secrets.ENCRYPTION_IV }}" >> .env
          echo "DB_HOST=db" >> .env
          echo "DB_PORT=3306" >> .env
          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> .env
          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
          echo "DB_DATABASE=telegram_bot" >> .env
          echo "DB_SYNCHRONIZE=true" >> .env
          echo "APP_URL=${{ secrets.APP_URL }}" >> .env
          echo "NODE_ENV=production" >> .env
          echo "# MySQL root password for Docker container" >> .env
          echo "MYSQL_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}" >> .env

      - name: Copy files to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: '.,!node_modules'
          target: '/home/Projects/telegram-email-forwarder'

      - name: Deploy application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/Projects/telegram-email-forwarder
            docker-compose down
            docker-compose up -d --build
